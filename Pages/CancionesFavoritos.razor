@page "/CancionesFavoritos"

@using Spotifo.Data.Model
@using Spotifo.Data.Service
@using System.IO
@using Microsoft.AspNetCore.Http
@using Spotifo.Pages.Filtros

@inject ICancionService ICancionService
@inject IFavoritosCancionService IFavoritosCancionService
@inject NavigationManager NavigationManager

<h1>Mis canciones favoritos</h1>
<table class="table">
    <thead>
        <tr>
            <th scope="col">Titulo de la cancion</th>
            <th scope="col">Género de la cancion</th>
            <th scope="col">Fecha de publicación</th>
            <th scope="col">Cantidad de me gustas</th>
            <th scope="col">Reproductor</th>
        </tr>
    </thead>
    @if (canciones != null)
    {
        @foreach (var songs in canciones)
        {
            <tbody>
                <tr>
                    <a href="CancionDescripcionGeneral/@songs.ID_cancion" target="_blank" ><td>@songs.Nombre_cancion</td></a>
                    <td>@songs.Nombre_Genero</td>
                    <td>@songs.Fecha_publicacion_cancion</td>
                    <td>@songs.Favoritos</td>
                    <td><audio controls="controls" id='@songs.Nombre_cancion' source src='/canciones/@songs.URL'></audio></td>
                </tr>
            </tbody>
        }
    }
</table>
@if(SaltarFC != 0){
    <button type="button" class="btn btn-primary" @onclick="@AnteriorC">Anterior</button>
}
@if(SaltarFC < (TotalC - 10)){
    <button type="button" class="btn btn-primary" @onclick="@SiguienteC">Siguiente</button>
}

@code{
    Cancion cancion = new Cancion();
    int SaltarFC = 0;
    int TotalC;
    private IEnumerable<Cancion> canciones;
    protected override async Task OnInitializedAsync()
    {
        canciones = await ICancionService.CancionesGustados();
        TotalC = canciones.Count();
        canciones = canciones.Skip(SaltarFC).Take(10).ToList();
    }
    protected async Task AnteriorC(){
        SaltarFC = SaltarFC - 10;
        canciones = await ICancionService.CancionesGustados();
        canciones = canciones.Skip(SaltarFC).Take(10).ToList();
    }
    protected async Task SiguienteC(){
        SaltarFC = SaltarFC + 10;
        canciones = await ICancionService.CancionesGustados();
        canciones = canciones.Skip(SaltarFC).Take(10).ToList();
    }
}